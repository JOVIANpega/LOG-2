
curl "https://acli.atlassian.com/windows/latest/acli_windows_amd64/acli.exe"



git hub commit "V1.5.6" "優化按鍵視窗"
git hub branch 轉成 main 
提交訊息：V1.5.1 - 修正PASS測項retry判斷邏輯和展開內容


git hub commit "V1.5.7" "優化PASS 顯示內容"
已成功推送到：https://github.com/JOVIANpega/LOG_analyser

pyinstaller --onefile --noconsole  main.py


在 Windows 上右鍵檔案→內容→詳細資料，看到 FileVersion/ProductVersion 皆為 1.0.0.0。
需要我將版本提升到指定號碼（例如 1.0.1.0

# 1️⃣ 把所有變更（已追蹤與未追蹤的檔案）加入暫存區
git add .

# 2️⃣ 提交變更，附上版本與描述
git commit -m "V1.6.0 優化PASS 顯示內容3"

# 3️⃣ 推送到 GitHub main 分支
git push origin main



git add .
git commit -m "V1.6.4 fixed FAIL 標籤頁的大字體標題"
git push origin main


開啟gui後 會根據 檔名有沒有pass決定要不要產生fail標籤頁
例如 開啟 XXX PASS.LOG 
那fail側項的標籤頁 隱藏不顯示

但fail的不影響，因為fail也是會有pass項目




FAIL 標籤頁的大字體標題應該會正確顯示：
之前：顯示 "2025/08/07 09:27:55 [1] All Test Aborted! ErrorCode: HHFE15 ----- 107.3027727 Sec."
現在：會顯示 "Check Battery_tempture is Fail !" 這樣的具體錯誤原因
這樣的修正讓用戶能夠：
一眼看到具體的失敗原因：大字體標題直接顯示測試項目失敗的具體內容
避免混淆：不會被 "All Test Aborted" 這樣的通用訊息誤導
快速定位問題：知道是哪個測試項目（如 Check Battery_tempture）失敗了


懸停預覽（Summary 內檔名欄與底部快速連結）
改成建立較大的備註視窗（約400x500），Excel 會在游標附近顯示，接近0.2秒內可讀效果
白色底 有框框 



GUI\設定標籤
再多增加一個GUI標題
可以修改測試LOG分析器 的文字 ，修改預設文字 為 測試log分析器 改成為ONLY FOR CENTIMANIA LOG 
這些文字可以修改儲存，按下保存設定立刻修改 且寫到設定檔


可以修改測試LOG分析器 的文字 ，修改預設文字 為 PEGA test log Aanlyser
這些文字可以修改儲存，按下保存設定立刻修改 且寫到設定檔

打開PASS EXCEL
發現 PASS項目 無法完整顯示測試項目 下拉也看不到 超過30個的 就自動產生 PASS項目2 ，繼續列出
檔名跟PASS項目緊湊 不要過多空白

滑鼠指向檔名預覽 0.5 sec 就要顯示

這邊稍微修改
在表格下方 顯示 每一個SHEET NAME的 連結 例如：下面這樣 每一個LOG檔名 都有對應的SHHET
按下去就切到那個對應的SHEET NAME
每一行都是一個欄位 減少誤按
1+Funtion-WE253100005-2025-0807-090119-PASS.log_SFIS_OFF 測試總時間:203.7 Sec.
1+Funtion-WE253100002-2025-0807-091001-PASS.log_SFIS_OFF 測試總時間:202.9 Sec.
1+Funtion-WE253100003-2025-0807-085530-PASS.log_SFIS_OFF 測試總時間:196.7 Sec.
1+Funtion-WE253100004-2025-0807-083658-PASS.log_SFIS_OFF 測試總時間:203.5 Sec."


Summary標籤顏色設定紅色
標籤文字設定 FONT＝10
 



這邊稍微修改 不要合併儲存格 一行行顯示 這樣就可以滑鼠指到檔名 會出現HTML連結 按下去就切到那個對應的SHEET NAME
HTML連結到對應的SHEET 滑鼠接近時 產生預覽視窗 顯示對應的SHEET NAME名稱

每一個檔名接近時 可以變色嗎？例如淡黃色背景 同時顯示預覽視窗



這個很接近了 但是 相同的測試項目可以共用檔名，這樣就不會佔據太多空間修改一下
原來的顏色維持白色底


Excel 本身不支援滑鼠 hover 動態變色，但我以「淡黃色底色 + 注解」達成你的需求重點：視覺高亮與滑鼠預覽。若你需要在 GUI 顯示端動態 hover 高亮，我可在 GUI 端再做。
你可以重新匯出測試：
Summary 檔名欄淡黃底，滑鼠停留時會彈出備註視窗，顯示對應的工作表名稱列表
若 hover 時仍需更強提示（例如加入更多資訊），告訴我要顯示的欄位或格式，我再擴充備註內容。


＝＝＝

第一行 深綠底白字 檔名 、PASS項目 這兩個 FONT=16 
向這樣的檔名是否可以做成類似HTML的連結
例如：鼠標點下去 會找到對應的SHEET 1+ADB_FWUP-Q9220242200005-20240
只有部分名稱相同 但其實就是同一個LOG
1+ADB_FWUP-Q9220242200005-2024-0607-210420-PASS.log_SFIS_OFF 測試總時間:316.3 Sec.

所有內容顯示文字大小應該是10，只有綠色底標題項目的才是FONT =16
 
＝＝＝

這邊的線 要實體框線 最外層粗體線 內部一般線 
有鑑於此 測試時間欄位可以拿掉
SFIS狀態(ON/OFF) 可以加到檔名最後面 ON用綠色 OFF用紅色文字顯示

檔名應該會變成這樣
1+ADB_FWUP-Q9220242200005-2024-0607-2104-20-PASS_SFIS_OFF.log


開啟EXCEL後 的第一行的欄位名稱 例如 PASS項目 SFIS狀態(ON/OFF) 有的會被擋住要手動調整 去改一下 需要完整顯示
Summary
第一行 深綠底白字 凍結第一行
測試總時間 應該抓這一行的文字 203.7063361 Sec
"2025/08/07 09:04:43 [1]	All phase Total Test Time !        ----- 203.7063361 Sec."

PASS項目
需要列出 所有測試項目PASS的 名稱 
例如:Get Qcode info FOR PEGA
 例如:READ ME Test 

PASS項目
檔名使用黑色文字 置中
現在的長這樣 1+Funtion-WE253100002-20250807091001-PASS.log_SFIS_OFF 測試總時間:202.9 Sec.
檔名應該要變成類似這樣 1+Funtion-WE253100002-2025-0807-091001-PASS.log_SFIS_OFF 測試總時間:202.9 Sec.
然後 測試日期時間欄全拿掉

PASS項目 編號1234

第1行檔名 and PASS項目 FONT=16
第2行以後 FONT = 10

原始LOG的SHEET怎麼被拿掉了呢? 把他還原 多少LOG就產生多少個SHEET



測試總時間:203.7 Sec.
這邊
測試總時間 抓的文字應該是 下面這種 原始LOG最下面會顯示 只需要抓時間即可 例如 203.7063361 Sec.
All phase Total Test Time !        ----- 203.7063361 Sec.

FAIL也用同樣邏輯




測試總時間 抓的文字應該是 下面這種 原始LOG最下面會顯示 只需要抓時間即可 例如 203.7063361 Sec.
All phase Total Test Time !        ----- 203.7063361 Sec.

====
請幫我新增並整合以下功能到現有的 Python GUI 工具中：

功能需求：
1. 在 GUI 新增「選擇資料夾」按鈕（可用 filedialog.askdirectory）。
2. 使用者選擇資料夾後，自動批次處理該資料夾下所有 LOG 檔。
3. 根據檔名判斷分類：
   - 檔名包含 "PASS" → PASS 分類
   - 檔名不包含 "PASS" → FAIL 分類
4. 處理完成後，自動產生兩個 Excel 檔：
   - PASS匯總.xlsx
   - FAIL匯總.xlsx

Excel 匯出規格：
FONT＝11 ，繁體中文，微軟正黑體

PASS匯總.xlsx：
- 第一個 Sheet 名稱為 Summary，欄位：
  檔名 | PASS項目 | 測試日期時間 | SFIS狀態(ON/OFF) | 測試總時間
- 其後的 Sheet，名稱為每個 PASS LOG 檔檔名。
- 每個 LOG Sheet：
  - 第一行：檔名（綠底白字）
  - 第二行：測項列表（標上 1, 2, 3, 4）
  - 從第三行起：貼上原始 LOG 內容，並保留原始 LOG 的顏色，對應測項加上 1, 2, 3, 4 標號。
  - 欄寬自動調整，避免內容擠在一起。

FAIL匯總.xlsx：
- 第一個 Sheet 名稱為 Summary，欄位：
  檔名 | FAIL原因 | 測試日期時間 | SFIS狀態(ON/OFF) | 測試總時間
- 其後的 Sheet，名稱為每個 FAIL LOG 檔檔名。
- 每個 LOG Sheet：
  - 第一行：檔名（紅底白字）
  - 第二行：主要錯誤原因
  - 第三行：PASS 的測項列表
  - 從第四行起：貼上原始 LOG 內容，並保留原始 LOG 的顏色，對應測項加上 1, 2, 3, 4 標號。
  - 欄寬自動調整，避免內容擠在一起。

其他要求：
所有檔案放在LOG該目錄下在產生新的目錄/ LOG集總整理
1. 處理完成後，彈出視窗（messagebox.showinfo）顯示「匯出完成 /共幾個檔案」。
2. 在 GUI 新增一個 Tab（名稱：匯總報表），在此頁面顯示剛剛產生的 PASS / FAIL 總覽資訊（即 Summary 內容）。
3. Excel 產生時，欄位標題需加粗置中，並自動調整欄寬。
4. 程式邏輯要能在打包成 EXE 後正常運行，並支援繁體中文檔名。

資料夾結構：
- 所有 LOG 來自使用者選擇的資料夾。
- 匯出的 Excel 檔預設放在同一資料夾。

====

把增強版的「選擇資料夾」流程接上自動多檔案彙整與 Excel 匯出，並在摘要頁顯示總覽。執行完會彈出視窗告知做完成。
輸出格式選擇：Excel
根據你選擇的資料夾，一個LOG一個LOG的處理 做的處理就是
根據PASS FAIL 分類 ，產生兩個檔案 分別是PASS匯總.xml	 、FAIL匯總.xml
PASS匯總，只蒐集檔名有包含PASS字串做處理 
FALI匯總，只蒐集檔名沒有包含PASS字串做處理 


EXCEL內容

PASS匯總
建立 Summary/LOG檔名1 /LOG檔名2/LOG檔名3 .....看有幾個PASS LOG就產生幾個SHEET，內容確保打開時欄位SHEET不會皺一起 文字不要被隱藏阻擋還要做調整 
Summary：檔名 、PASS項目、測試日期時間、SFIS：ON/Off、測試總時間
綠色底 白字：由上往下 檔名、做了哪些測項目標上1234、原始LOG全貼上並且顏色保持跟原始LOG一樣 並標上1234 
例如：
檔名1
做了哪些測項目標上1234
原始LOG貼上

檔名2
做了哪些測項目標上1234
原始LOG貼上

FALI匯總
Summary：檔名 、FAIL原因、測試日期時間、SFIS：ON/Off、測試總時間
建立 Summary/LOG檔名1 /LOG檔名2/LOG檔名3 .....看有幾個FAIL LOG就產生幾個SHEET
紅色底 白字：每一個SHEET，由上往下列出 檔名、主要錯誤原因、PASS哪些項目，原始LOG全貼上並且顏色保持跟原始LOG一樣 並標上1234 





=======

預覽視窗點擊後彈出測項指令內容
我要做優化
首先最上面要整理並顯示所有> and < 的內容，並且1234條列出 
例如:

1.
> :GetVal,"$g5GModel"
< RG530F-NA

2.
> :Utility.PY,"D:\Centimani_Kangaroo_UpdateFW\py\adb.py","shell atcli at+qgmr","ON","-1","0"
< 
< standard output#

====

未找到指令時 例如下面就顯示 @Write ISN to MB 不要顯示 	未找到指令 

步驟 1: Write ISN to MB
     1. 2025/03/27 01:58:26 [1]	Do @STEP012@Write ISN to MB
     2. 2025/03/27 01:58:26 [1]	Check ISN from MB skips by ExecMode = 6.
     3. 2025/03/27 01:58:26 [1]	:@STEP012@Write ISN to MB Test is Pass ! 		----- 0 Sec.

Do @STEP012@Write ISN to MB


這種未找到指令 修正這個現象
如下面就顯示 @CheckRoute ，目前是 未找到指令 
如下面就顯示 @READ ME 不要顯示 	未找到指令 
步驟 1: CheckRoute
     1. 2025/03/27 01:58:13 [1]	Do @STEP002@CheckRoute
     2. 2025/03/27 01:58:13 [1]	Run B7PL025-000:Show ISN to UI	Mode: 1, Retry: 4
     3. [01:58:13.472][PC] [Show ISN to UI]++
     4. 2025/03/27 01:58:13 [1]	> :ShowISN,"LoopRunning"
     5. 2025/03/27 01:58:13 [1]	< 0
     6. [01:58:13.478][PC] [Show ISN to UI]--
     7. 2025/03/27 01:58:13 [1]	[PC] [Show ISN to UI] ~~ TestTime:0.0077035 sec
     8. 2025/03/27 01:58:13 [1]	Run B7PL025-001:Disconnect,"UART"	Mode: 1, Retry: 4
     9. [01:58:13.478][PC] [Disconnect,"UART"]++
    10. 2025/03/27 01:58:13 [1]	> :Disconnect,"UART"
    11. 2025/03/27 01:58:13 [1]	< 0
    12. [01:58:13.487][PC] [Disconnect,"UART"]--
    13. 2025/03/27 01:58:13 [1]	[PC] [Disconnect,"UART"] ~~ TestTime:0.0090226 sec
    14. 2025/03/27 01:58:13 [1]	B7PL025-001:@STEP002@CheckRoute Test is Pass ! 		----- 0.0167261 Sec.

步驟 2: READ ME
     1. 2025/03/27 01:58:13 [1]	Do @STEP003@READ ME
     2. 2025/03/27 01:58:13 [1]	Run B7PL025-003:Pop window	Mode: 0, Retry: 4
     3. [01:58:13.498][PC] [Pop window]++
     4. 2025/03/27 01:58:13 [1]	> :ShowConfirmBox,"you need SD and SIM","YES"
     5. 2025/03/27 01:58:13 [1]	Skip by LoopRunning is enable.
     6. 2025/03/27 01:58:13 [1]	< YES
     7. [01:58:13.507][PC] [Pop window]--
     8. 2025/03/27 01:58:13 [1]	[PC] [Pop window] ~~ TestTime:0.0091451 sec
     9. 2025/03/27 01:58:13 [1]	B7PL025-003:@STEP003@READ ME Test is Pass ! 		----- 0.0091451 Sec.





====

FAIL測試標籤 
EX: 下面顯示這一區塊內容 錯誤原因自動顯示
內容 只要 FAIL 原因 如下範例

錯誤原因擷取這段文字 例如': 
2025/08/07 08:53:36 [1]	VSCH026-043:Chec Frimware version is Fail ! <ErrorCode: BSFR18>     ----- 10.0648777 Sec.

大字體是顯示這文字
Chec Frimware version is Fail 

其他維持不用修改


====

以上修改做完只要 顯示做完了 不用解釋一大堆你在幹嘛

GUI的標籤頁 鼠標靠近顯示深綠色黑色文字

FAIL測試標籤 再分割成兩個上下視窗
上面維持不變
下面則顯示 FAIL的錯誤字串 
上下可以調整拖拉大小 並記錄在設定區塊 關閉開啟GUI要寫入\讀取

EX: 下面顯示這一區塊內容 這邊鼠標不用靠近錯誤原因自己就顯示
縣市內容 不是全部錯誤字串 只要 FAIL 原因 如下範例

不要顯示這麼多文字
2025/08/07 09:27:53 [1]	IPIO009-0580:Check Battery_tempture is Fail ! <ErrorCode: HHFE15>     ----- 53.2010722 Sec.
應該這樣顯示
主題就是 Check Battery_tempture is Fail (大字體 紅色文字 白底)

其他錯誤就白底黑色顯示
 370. 2025/08/07 09:17:45 [1]	Check Battery_tempture Result: gBattery_tempture=[   91.877681] nvt_i2c 2f014e000.i2c: i2c_nvtim_xfer_msg(773) NACK!
 371. 2025/08/07 09:17:45 [1]	CurrentTestID:IPIO009-0580 - The validation: gBattery_tempture = [   91.877681] nvt_i2c 2f014e000.i2c: i2c_nvtim_xfer_msg(773) NACK! (10,50)
 372. 2025/08/07 09:17:45 [1]	The type of [   91.877681] nvt_i2c 2f014e000.i2c: i2c_nvtim_xfer_msg(773) NACK! is not int or float.
 373. [09:17:45.146][PC] [Check Battery_tempture]--
 374. 2025/08/07 09:17:45 [1]	[PC] [Check Battery_tempture] ~~ TestTime:5.0073274 sec
 375. 2025/08/07 09:17:45 [1]	IPIO009-0580:Check Battery_tempture is Fail ! <ErrorCode: HHFE15>     ----- 53.2126816 Sec.
 376. 2025/08/07 09:17:45 [1]	DUT Test Completed !        ----- 53.2223204 Sec.
 377. 2025/08/07 09:17:47 [1]	All Test Aborted !  ErrorCode: HHFE15     ----- 112.2097647 Sec.
 378. 2025/08/07 09:17:47 [1]	TotalCount:13-YR:31%
 379. 2025/08/07 09:17:47 [1]	Report name: Funtion_WE253100001_2025-08-07_09-17-47.ct
 380. 2025/08/07 09:17:47 [1]	Execute Phase 97 Test.

字體大小也要聯動這邊 清除結果按鈕 也要清除這邊
以上修改做完只要 顯示做完了 不用解釋一大堆你在幹嘛


現在來修改FAIL測項標籤 
也要依照PASS的測項標籤 邏輯完成
雖然是FAIL 可是也有PASS的 ，PASS的就顯示在PASS區塊
FAIL就只顯示FAIL項目


PASS 測項標籤
未找到指令 通常代表腳本 跳過這個項目 沒下指令沒做什麼事情
看能否把他們蒐集成一大塊
例如這樣 就只要顯示一個 未找到指令 ，例如只有兩個就顯示未找到指令x2
向下面這樣 就顯示 未找到指令x6 點進去開出的視窗就是蒐集這六個

025/08/07 09:10:02 [1]	B7PL025-007:@STEP005@CheckRoute Test is Pass ! 		----- 0.0096335 Sec.
2025/08/07 09:10:02 [1]	Do @STEP006@GETSSN
2025/08/07 09:10:02 [1]	:@STEP006@GETSSN Test is Pass ! 		----- 0 Sec.
2025/08/07 09:10:02 [1]	Do @STEP007@GET sfisHW
2025/08/07 09:10:02 [1]	:@STEP007@GET sfisHW Test is Pass ! 		----- 0 Sec.
2025/08/07 09:10:02 [1]	Do @STEP008@GET sfisSKU
2025/08/07 09:10:02 [1]	:@STEP008@GET sfisSKU Test is Pass ! 		----- 0 Sec.
2025/08/07 09:10:02 [1]	Do @STEP009@GET sfisETH MAC
2025/08/07 09:10:02 [1]	:@STEP009@GET sfisETH MAC Test is Pass ! 		----- 0 Sec.
2025/08/07 09:10:02 [1]	Do @STEP010@GET sfisIVKEY
2025/08/07 09:10:02 [1]	Pop window skips by ExecMode = 6.
2025/08/07 09:10:02 [1]	:@STEP010@GET sfisIVKEY Test is Pass ! 		----- 0 Sec.
2025/08/07 09:10:02 [1]	Do @STEP011@GET sfisMOKP_SN

展開內容就這寫 集合 

且照著順序作 如果下個測試項目有測試 就繼續分類 直到在遇到未找到指令 
不要一次蒐集全部 目前是這樣子 這是錯誤的




需要你修改 測項指令內容彈出來的視窗 上一頁下一頁 可以一直按，直到最後一個測試項目

未找到指令需要再修改

PASS 測項標籤
未找到指令 通常代表腳本 跳過這個項目 
看能否把他們蒐集成一大塊
例如這樣 就只要顯示一個 未找到指令 ，展開內容就這寫 集合 且照著順序作 不要一次蒐集全部
例如只有兩個就顯示未找到指令x2

025/08/07 09:10:02 [1]	B7PL025-007:@STEP005@CheckRoute Test is Pass ! 		----- 0.0096335 Sec.
2025/08/07 09:10:02 [1]	Do @STEP006@GETSSN
2025/08/07 09:10:02 [1]	:@STEP006@GETSSN Test is Pass ! 		----- 0 Sec.
2025/08/07 09:10:02 [1]	Do @STEP007@GET sfisHW
2025/08/07 09:10:02 [1]	:@STEP007@GET sfisHW Test is Pass ! 		----- 0 Sec.
2025/08/07 09:10:02 [1]	Do @STEP008@GET sfisSKU
2025/08/07 09:10:02 [1]	:@STEP008@GET sfisSKU Test is Pass ! 		----- 0 Sec.
2025/08/07 09:10:02 [1]	Do @STEP009@GET sfisETH MAC
2025/08/07 09:10:02 [1]	:@STEP009@GET sfisETH MAC Test is Pass ! 		----- 0 Sec.
2025/08/07 09:10:02 [1]	Do @STEP010@GET sfisIVKEY
2025/08/07 09:10:02 [1]	Pop window skips by ExecMode = 6.
2025/08/07 09:10:02 [1]	:@STEP010@GET sfisIVKEY Test is Pass ! 		----- 0 Sec.
2025/08/07 09:10:02 [1]	Do @STEP011@GET sfisMOKP_SN


PASS 測像有的會顯示紅色文字 後面retry 2
這是什麼邏輯算出來的呢? 我檢查原始LOG
VALO360_TestFlow_20250423_after_Function.xlsx.
例如:@STEP021@Check FW version

我沒看到他做兩次阿 為什麼會顯示紅色文字 檢查看他的邏輯


git hub commit "V1.5.1"
提交訊息：V1.5.1 - 修正PASS測項retry判斷邏輯和展開內容
已成功推送到：https://github.com/JOVIANpega/LOG_analyser

還原本地 使用 github 
6d4c522
這一版本還原

        - 檢查是否有 "Retry: N" 關鍵字，若有且N>1 不需要紅字註記了 用黑色文字

PASS 測項標籤
未找到指令 通常代表腳本 跳過這個項目 
看能否把他們蒐集成一大塊
例如這樣 就只要顯示一個 未找到指令 ，展開內容就這寫 集合 且照著順序作 不要一次蒐集全部
例如只有兩個就顯示未找到指令x2

025/08/07 09:10:02 [1]	B7PL025-007:@STEP005@CheckRoute Test is Pass ! 		----- 0.0096335 Sec.
2025/08/07 09:10:02 [1]	Do @STEP006@GETSSN
2025/08/07 09:10:02 [1]	:@STEP006@GETSSN Test is Pass ! 		----- 0 Sec.
2025/08/07 09:10:02 [1]	Do @STEP007@GET sfisHW
2025/08/07 09:10:02 [1]	:@STEP007@GET sfisHW Test is Pass ! 		----- 0 Sec.
2025/08/07 09:10:02 [1]	Do @STEP008@GET sfisSKU
2025/08/07 09:10:02 [1]	:@STEP008@GET sfisSKU Test is Pass ! 		----- 0 Sec.
2025/08/07 09:10:02 [1]	Do @STEP009@GET sfisETH MAC
2025/08/07 09:10:02 [1]	:@STEP009@GET sfisETH MAC Test is Pass ! 		----- 0 Sec.
2025/08/07 09:10:02 [1]	Do @STEP010@GET sfisIVKEY
2025/08/07 09:10:02 [1]	Pop window skips by ExecMode = 6.
2025/08/07 09:10:02 [1]	:@STEP010@GET sfisIVKEY Test is Pass ! 		----- 0 Sec.
2025/08/07 09:10:02 [1]	Do @STEP011@GET sfisMOKP_SN





測試區塊 有些會下好幾個指令的 把他這樣顯示 只要是下指令 出現> 的都列出來
例如:
Check FW version
	**:Connect,"UART"
	**
	**:Delay,"5000"
	** pegacmd version
	** diag -g status eth0
	** :Delay,"0"
以此類推 把他們這樣顯示出來

1. 2025/08/07 09:10:53 [1]	Do @STEP021@Check FW version
   2. 2025/08/07 09:10:53 [1]	Run B7PL025-040:Open UART	Mode: 1, Retry: 3
   3. [09:10:53.063][PC] [Open UART]++
   4. 2025/08/07 09:10:53 [1]	> :Connect,"UART"
   5. 2025/08/07 09:10:53 [1]	< 0
   6. [09:10:53.063][PC] [Open UART]--
   7. 2025/08/07 09:10:53 [1]	[PC] [Open UART] ~~ TestTime:0 sec
   8. 2025/08/07 09:10:53 [1]	Run B7PL025-041:BOOT UP OK	Mode: 2, Retry: 3
   9. [09:10:53.063][PC] [BOOT UP OK]++
  10. 2025/08/07 09:10:53 [1]	(UART) > 
  11. 
  12. 2025/08/07 09:10:53 [1]	(UART) < 
  13. root@NOKIA360Camera-Valo360:/root$ 
  14. root@NOKIA360Camera-Valo360:/root$ 
  15. [09:10:53.103][PC] [BOOT UP OK]--
  16. 2025/08/07 09:10:53 [1]	[PC] [BOOT UP OK] ~~ TestTime:0.0402914 sec
  17. 2025/08/07 09:10:53 [1]	Run B7PL025-042:Wait	Mode: 0, Retry: 3
  18. 2025/08/07 09:10:53 [1]	> :Delay,"5000"
  19. 2025/08/07 09:10:58 [1]	< 0
  20. 2025/08/07 09:10:58 [1]	Run VSCH026-043:Chec Frimware version	Mode: 0, Retry: 3
  21. [09:10:58.112][DUT] [Chec Frimware version]++
  22. 2025/08/07 09:10:58 [1]	(UART) > pegacmd version
  23. 
  24. 2025/08/07 09:10:58 [1]	(UART) < pegacmd version
  25. 0.5.4.37.0_b5838c4
  26. root@NOKIA360Camera-Valo360:/root$ 
  27. root@NOKIA360Camera-Valo360:/root$ 
  28. [09:10:58.171][DUT] [Chec Frimware version]--
  29. 2025/08/07 09:10:58 [1]	[DUT] [Chec Frimware version] ~~ TestTime:0.0596153 sec
  30. 2025/08/07 09:10:58 [1]	Run IOET151-044:Check ETH LINK status	Mode: 1, Retry: 3
  31. [09:10:58.171][PC] [Check ETH LINK status]++
  32. 2025/08/07 09:10:58 [1]	(UART) > diag -g status eth0
  33. 
  34. 2025/08/07 09:10:59 [1]	(UART) < diag -g status eth0
  35. link: up
  36. duplex: full
  37. speed: 1000
  38. root@NOKIA360Camera-Valo360:/root$ 
  39. root@NOKIA360Camera-Valo360:/root$ AT+CFUN=5
  40. OK
  41. 
  42. [09:10:59.191][PC] [Check ETH LINK status]--
  43. 2025/08/07 09:10:59 [1]	[PC] [Check ETH LINK status] ~~ TestTime:1.0198073 sec
  44. 2025/08/07 09:10:59 [1]	Run B7PL025-045:Wait	Mode: 0, Retry: 3
  45. [09:10:59.191][PC] [Wait]++
  46. 2025/08/07 09:10:59 [1]	> :Delay,"0"
  47. 2025/08/07 09:10:59 [1]	< 0
  48. [09:10:59.191][PC] [Wait]--
  49. 2025/08/07 09:10:59 [1]	[PC] [Wait] ~~ TestTime:0 sec
  50. 2025/08/07 09:10:59 [1]	B7PL025-045:@STEP021@Check FW version Test is Pass ! 		----- 6.1281642 Sec.




不對 應該基於
Do @STEP048@CHECK SD  這是起始點

@STEP048@CHECK SD  Inserted Test is Pass ! 這是結尾

你要顯示的就是夾在這中間的區塊所有內容 包含頭跟尾 

另外 展開的區塊 加上1234 的數字編碼 


當您測試完畢並關閉GUI後，我會：
打包成EXE檔案
更新GitHub版本
更新版本資訊

2025/07/08 14:11:58 [1]	Do @STEP048@CHECK SD  Inserted
2025/07/08 14:11:58 [1]	Run NBHM004-105:SD card inserted	Mode: 1, Retry: 3
[14:11:58.393][DUT] [SD card inserted]++
2025/07/08 14:11:58 [1]	(UART) > diag -g status sd

2025/07/08 14:11:58 [1]	(UART) < diag -g status sd
removed
root@NOKIA360Camera-WE251300012:/root$ 
root@NOKIA360Camera-WE2513000
[14:11:58.421][DUT] [SD card inserted]--
2025/07/08 14:11:58 [1]	[DUT] [SD card inserted] ~~ TestTime:0.0304165 sec
2025/07/08 14:11:58 [1]	Run PDSC003-106:Check SD RW	Mode: 1, Retry: 3
[14:11:58.421][DUT] [Check SD RW]++
2025/07/08 14:11:58 [1]	(UART) > mount |grep sd

2025/07/08 14:11:58 [1]	(UART) < mount |grep sd
root@NOKIA360Camera-WE251300012:/root$ 
root@NOKIA360Camera-WE251300012:/root$ 
[14:11:58.451][DUT] [Check SD RW]--
2025/07/08 14:11:58 [1]	[DUT] [Check SD RW] ~~ TestTime:0.0316031 sec
2025/07/08 14:11:58 [1]	Run PDSC003-107:Check SD RW	Mode: 1, Retry: 3
[14:11:58.453][DUT] [Check SD RW]++
2025/07/08 14:11:58 [1]	(UART) > echo "1234" > /mnt/sd/test_sd

2025/07/08 14:11:58 [1]	(UART) < echo "1234" > /mnt/sd/test_sd
root@NOKIA360Camera-WE251300012:/root$ 
root@NOKIA360Camera-WE251300012:/root$ 
[14:11:58.482][DUT] [Check SD RW]--
2025/07/08 14:11:58 [1]	[DUT] [Check SD RW] ~~ TestTime:0.0296354 sec
2025/07/08 14:11:58 [1]	Run PDSC003-108:Check SD RW	Mode: 1, Retry: 3
[14:11:58.485][DUT] [Check SD RW]++
2025/07/08 14:11:58 [1]	(UART) > cat /mnt/sd/test_sd

2025/07/08 14:11:58 [1]	(UART) < cat /mnt/sd/test_sd
1234
root@NOKIA360Camera-WE251300012:/root$ 
root@NOKIA360Camera-WE251300012:/root$ 
[14:11:58.513][DUT] [Check SD RW]--
2025/07/08 14:11:58 [1]	[DUT] [Check SD RW] ~~ TestTime:0.0311942 se