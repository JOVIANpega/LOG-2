
curl "https://acli.atlassian.com/windows/latest/acli_windows_amd64/acli.exe"




pyinstaller --onefile --noconsole  main_enhanced.py





現在來修改FAIL測項標籤 
也要依照PASS的測項標籤 邏輯完成
雖然是FAIL 可是也有PASS的 ，PASS的就顯示在PASS區塊
FAIL就只顯示FAIL項目


PASS 測項標籤
未找到指令 通常代表腳本 跳過這個項目 沒下指令沒做什麼事情
看能否把他們蒐集成一大塊
例如這樣 就只要顯示一個 未找到指令 ，例如只有兩個就顯示未找到指令x2
向下面這樣 就顯示 未找到指令x6 點進去開出的視窗就是蒐集這六個

025/08/07 09:10:02 [1]	B7PL025-007:@STEP005@CheckRoute Test is Pass ! 		----- 0.0096335 Sec.
2025/08/07 09:10:02 [1]	Do @STEP006@GETSSN
2025/08/07 09:10:02 [1]	:@STEP006@GETSSN Test is Pass ! 		----- 0 Sec.
2025/08/07 09:10:02 [1]	Do @STEP007@GET sfisHW
2025/08/07 09:10:02 [1]	:@STEP007@GET sfisHW Test is Pass ! 		----- 0 Sec.
2025/08/07 09:10:02 [1]	Do @STEP008@GET sfisSKU
2025/08/07 09:10:02 [1]	:@STEP008@GET sfisSKU Test is Pass ! 		----- 0 Sec.
2025/08/07 09:10:02 [1]	Do @STEP009@GET sfisETH MAC
2025/08/07 09:10:02 [1]	:@STEP009@GET sfisETH MAC Test is Pass ! 		----- 0 Sec.
2025/08/07 09:10:02 [1]	Do @STEP010@GET sfisIVKEY
2025/08/07 09:10:02 [1]	Pop window skips by ExecMode = 6.
2025/08/07 09:10:02 [1]	:@STEP010@GET sfisIVKEY Test is Pass ! 		----- 0 Sec.
2025/08/07 09:10:02 [1]	Do @STEP011@GET sfisMOKP_SN

展開內容就這寫 集合 

且照著順序作 如果下個測試項目有測試 就繼續分類 直到在遇到未找到指令 
不要一次蒐集全部 目前是這樣子 這是錯誤的




需要你修改 測項指令內容彈出來的視窗 上一頁下一頁 可以一直按，直到最後一個測試項目

未找到指令需要再修改

PASS 測項標籤
未找到指令 通常代表腳本 跳過這個項目 
看能否把他們蒐集成一大塊
例如這樣 就只要顯示一個 未找到指令 ，展開內容就這寫 集合 且照著順序作 不要一次蒐集全部
例如只有兩個就顯示未找到指令x2

025/08/07 09:10:02 [1]	B7PL025-007:@STEP005@CheckRoute Test is Pass ! 		----- 0.0096335 Sec.
2025/08/07 09:10:02 [1]	Do @STEP006@GETSSN
2025/08/07 09:10:02 [1]	:@STEP006@GETSSN Test is Pass ! 		----- 0 Sec.
2025/08/07 09:10:02 [1]	Do @STEP007@GET sfisHW
2025/08/07 09:10:02 [1]	:@STEP007@GET sfisHW Test is Pass ! 		----- 0 Sec.
2025/08/07 09:10:02 [1]	Do @STEP008@GET sfisSKU
2025/08/07 09:10:02 [1]	:@STEP008@GET sfisSKU Test is Pass ! 		----- 0 Sec.
2025/08/07 09:10:02 [1]	Do @STEP009@GET sfisETH MAC
2025/08/07 09:10:02 [1]	:@STEP009@GET sfisETH MAC Test is Pass ! 		----- 0 Sec.
2025/08/07 09:10:02 [1]	Do @STEP010@GET sfisIVKEY
2025/08/07 09:10:02 [1]	Pop window skips by ExecMode = 6.
2025/08/07 09:10:02 [1]	:@STEP010@GET sfisIVKEY Test is Pass ! 		----- 0 Sec.
2025/08/07 09:10:02 [1]	Do @STEP011@GET sfisMOKP_SN


PASS 測像有的會顯示紅色文字 後面retry 2
這是什麼邏輯算出來的呢? 我檢查原始LOG
VALO360_TestFlow_20250423_after_Function.xlsx.
例如:@STEP021@Check FW version

我沒看到他做兩次阿 為什麼會顯示紅色文字 檢查看他的邏輯


git hub commit "V1.5.1"
提交訊息：V1.5.1 - 修正PASS測項retry判斷邏輯和展開內容
已成功推送到：https://github.com/JOVIANpega/LOG_analyser

還原本地 使用 github 
6d4c522
這一版本還原

        - 檢查是否有 "Retry: N" 關鍵字，若有且N>1 不需要紅字註記了 用黑色文字

PASS 測項標籤
未找到指令 通常代表腳本 跳過這個項目 
看能否把他們蒐集成一大塊
例如這樣 就只要顯示一個 未找到指令 ，展開內容就這寫 集合 且照著順序作 不要一次蒐集全部
例如只有兩個就顯示未找到指令x2

025/08/07 09:10:02 [1]	B7PL025-007:@STEP005@CheckRoute Test is Pass ! 		----- 0.0096335 Sec.
2025/08/07 09:10:02 [1]	Do @STEP006@GETSSN
2025/08/07 09:10:02 [1]	:@STEP006@GETSSN Test is Pass ! 		----- 0 Sec.
2025/08/07 09:10:02 [1]	Do @STEP007@GET sfisHW
2025/08/07 09:10:02 [1]	:@STEP007@GET sfisHW Test is Pass ! 		----- 0 Sec.
2025/08/07 09:10:02 [1]	Do @STEP008@GET sfisSKU
2025/08/07 09:10:02 [1]	:@STEP008@GET sfisSKU Test is Pass ! 		----- 0 Sec.
2025/08/07 09:10:02 [1]	Do @STEP009@GET sfisETH MAC
2025/08/07 09:10:02 [1]	:@STEP009@GET sfisETH MAC Test is Pass ! 		----- 0 Sec.
2025/08/07 09:10:02 [1]	Do @STEP010@GET sfisIVKEY
2025/08/07 09:10:02 [1]	Pop window skips by ExecMode = 6.
2025/08/07 09:10:02 [1]	:@STEP010@GET sfisIVKEY Test is Pass ! 		----- 0 Sec.
2025/08/07 09:10:02 [1]	Do @STEP011@GET sfisMOKP_SN





測試區塊 有些會下好幾個指令的 把他這樣顯示 只要是下指令 出現> 的都列出來
例如:
Check FW version
	**:Connect,"UART"
	**
	**:Delay,"5000"
	** pegacmd version
	** diag -g status eth0
	** :Delay,"0"
以此類推 把他們這樣顯示出來

1. 2025/08/07 09:10:53 [1]	Do @STEP021@Check FW version
   2. 2025/08/07 09:10:53 [1]	Run B7PL025-040:Open UART	Mode: 1, Retry: 3
   3. [09:10:53.063][PC] [Open UART]++
   4. 2025/08/07 09:10:53 [1]	> :Connect,"UART"
   5. 2025/08/07 09:10:53 [1]	< 0
   6. [09:10:53.063][PC] [Open UART]--
   7. 2025/08/07 09:10:53 [1]	[PC] [Open UART] ~~ TestTime:0 sec
   8. 2025/08/07 09:10:53 [1]	Run B7PL025-041:BOOT UP OK	Mode: 2, Retry: 3
   9. [09:10:53.063][PC] [BOOT UP OK]++
  10. 2025/08/07 09:10:53 [1]	(UART) > 
  11. 
  12. 2025/08/07 09:10:53 [1]	(UART) < 
  13. root@NOKIA360Camera-Valo360:/root$ 
  14. root@NOKIA360Camera-Valo360:/root$ 
  15. [09:10:53.103][PC] [BOOT UP OK]--
  16. 2025/08/07 09:10:53 [1]	[PC] [BOOT UP OK] ~~ TestTime:0.0402914 sec
  17. 2025/08/07 09:10:53 [1]	Run B7PL025-042:Wait	Mode: 0, Retry: 3
  18. 2025/08/07 09:10:53 [1]	> :Delay,"5000"
  19. 2025/08/07 09:10:58 [1]	< 0
  20. 2025/08/07 09:10:58 [1]	Run VSCH026-043:Chec Frimware version	Mode: 0, Retry: 3
  21. [09:10:58.112][DUT] [Chec Frimware version]++
  22. 2025/08/07 09:10:58 [1]	(UART) > pegacmd version
  23. 
  24. 2025/08/07 09:10:58 [1]	(UART) < pegacmd version
  25. 0.5.4.37.0_b5838c4
  26. root@NOKIA360Camera-Valo360:/root$ 
  27. root@NOKIA360Camera-Valo360:/root$ 
  28. [09:10:58.171][DUT] [Chec Frimware version]--
  29. 2025/08/07 09:10:58 [1]	[DUT] [Chec Frimware version] ~~ TestTime:0.0596153 sec
  30. 2025/08/07 09:10:58 [1]	Run IOET151-044:Check ETH LINK status	Mode: 1, Retry: 3
  31. [09:10:58.171][PC] [Check ETH LINK status]++
  32. 2025/08/07 09:10:58 [1]	(UART) > diag -g status eth0
  33. 
  34. 2025/08/07 09:10:59 [1]	(UART) < diag -g status eth0
  35. link: up
  36. duplex: full
  37. speed: 1000
  38. root@NOKIA360Camera-Valo360:/root$ 
  39. root@NOKIA360Camera-Valo360:/root$ AT+CFUN=5
  40. OK
  41. 
  42. [09:10:59.191][PC] [Check ETH LINK status]--
  43. 2025/08/07 09:10:59 [1]	[PC] [Check ETH LINK status] ~~ TestTime:1.0198073 sec
  44. 2025/08/07 09:10:59 [1]	Run B7PL025-045:Wait	Mode: 0, Retry: 3
  45. [09:10:59.191][PC] [Wait]++
  46. 2025/08/07 09:10:59 [1]	> :Delay,"0"
  47. 2025/08/07 09:10:59 [1]	< 0
  48. [09:10:59.191][PC] [Wait]--
  49. 2025/08/07 09:10:59 [1]	[PC] [Wait] ~~ TestTime:0 sec
  50. 2025/08/07 09:10:59 [1]	B7PL025-045:@STEP021@Check FW version Test is Pass ! 		----- 6.1281642 Sec.




不對 應該基於
Do @STEP048@CHECK SD  這是起始點

@STEP048@CHECK SD  Inserted Test is Pass ! 這是結尾

你要顯示的就是夾在這中間的區塊所有內容 包含頭跟尾 

另外 展開的區塊 加上1234 的數字編碼 


當您測試完畢並關閉GUI後，我會：
打包成EXE檔案
更新GitHub版本
更新版本資訊

2025/07/08 14:11:58 [1]	Do @STEP048@CHECK SD  Inserted
2025/07/08 14:11:58 [1]	Run NBHM004-105:SD card inserted	Mode: 1, Retry: 3
[14:11:58.393][DUT] [SD card inserted]++
2025/07/08 14:11:58 [1]	(UART) > diag -g status sd

2025/07/08 14:11:58 [1]	(UART) < diag -g status sd
removed
root@NOKIA360Camera-WE251300012:/root$ 
root@NOKIA360Camera-WE2513000
[14:11:58.421][DUT] [SD card inserted]--
2025/07/08 14:11:58 [1]	[DUT] [SD card inserted] ~~ TestTime:0.0304165 sec
2025/07/08 14:11:58 [1]	Run PDSC003-106:Check SD RW	Mode: 1, Retry: 3
[14:11:58.421][DUT] [Check SD RW]++
2025/07/08 14:11:58 [1]	(UART) > mount |grep sd

2025/07/08 14:11:58 [1]	(UART) < mount |grep sd
root@NOKIA360Camera-WE251300012:/root$ 
root@NOKIA360Camera-WE251300012:/root$ 
[14:11:58.451][DUT] [Check SD RW]--
2025/07/08 14:11:58 [1]	[DUT] [Check SD RW] ~~ TestTime:0.0316031 sec
2025/07/08 14:11:58 [1]	Run PDSC003-107:Check SD RW	Mode: 1, Retry: 3
[14:11:58.453][DUT] [Check SD RW]++
2025/07/08 14:11:58 [1]	(UART) > echo "1234" > /mnt/sd/test_sd

2025/07/08 14:11:58 [1]	(UART) < echo "1234" > /mnt/sd/test_sd
root@NOKIA360Camera-WE251300012:/root$ 
root@NOKIA360Camera-WE251300012:/root$ 
[14:11:58.482][DUT] [Check SD RW]--
2025/07/08 14:11:58 [1]	[DUT] [Check SD RW] ~~ TestTime:0.0296354 sec
2025/07/08 14:11:58 [1]	Run PDSC003-108:Check SD RW	Mode: 1, Retry: 3
[14:11:58.485][DUT] [Check SD RW]++
2025/07/08 14:11:58 [1]	(UART) > cat /mnt/sd/test_sd

2025/07/08 14:11:58 [1]	(UART) < cat /mnt/sd/test_sd
1234
root@NOKIA360Camera-WE251300012:/root$ 
root@NOKIA360Camera-WE251300012:/root$ 
[14:11:58.513][DUT] [Check SD RW]--
2025/07/08 14:11:58 [1]	[DUT] [Check SD RW] ~~ TestTime:0.0311942 se